drop sequence if exists tab_cities_seq;
drop sequence if exists tab_groups_seq;
drop sequence if exists tab_kitchens_seq;
drop sequence if exists tab_order_items_seq;
drop sequence if exists tab_orders_seq;
drop sequence if exists tab_payment_ways_seq;
drop sequence if exists tab_permissions_seq;
drop sequence if exists tab_products_seq;
drop sequence if exists tab_restaurants_seq;
drop sequence if exists tab_states_seq;
drop sequence if exists tab_users_seq;

alter table if exists group_permission drop constraint if exists fk_permission_group;
alter table if exists group_permission drop constraint if exists fk_group_permission;
alter table if exists restaurant_payment_way drop constraint if exists fk_payment_restaurant;
alter table if exists restaurant_payment_way drop constraint if exists fk_restaurant_payment;
alter table if exists tab_cities drop constraint if exists fk_state_city;
alter table if exists tab_order_items drop constraint if exists fk_order_item;
alter table if exists tab_order_items drop constraint if exists fk_order_product;
alter table if exists tab_orders drop constraint if exists fk_order_address;
alter table if exists tab_orders drop constraint if exists fk_order_payment;
alter table if exists tab_orders drop constraint if exists fk_order_restaurant;
alter table if exists tab_orders drop constraint if exists fk_order_user;
alter table if exists tab_products drop constraint if exists fk_product_restaurant;
alter table if exists tab_restaurants drop constraint if exists fk_restaurant_city;
alter table if exists tab_restaurants drop constraint if exists fk_restaurant_kitchen;
alter table if exists user_group drop constraint if exists fk_group_user;
alter table if exists user_group drop constraint if exists fk_user_group;

drop table if exists group_permission cascade;
drop table if exists restaurant_payment_way cascade;
drop table if exists tab_cities cascade;
drop table if exists tab_groups cascade;
drop table if exists tab_kitchens cascade;
drop table if exists tab_order_items cascade;
drop table if exists tab_orders cascade;
drop table if exists tab_payment_ways cascade;
drop table if exists tab_permissions cascade;
drop table if exists tab_products cascade;
drop table if exists tab_restaurants cascade;
drop table if exists tab_states cascade;
drop table if exists tab_users cascade;
drop table if exists user_group cascade;

create sequence tab_cities_seq start with 1 increment by 1 no minvalue no maxvalue cache 1;
create sequence tab_groups_seq start with 1 increment by 1 no minvalue no maxvalue cache 1;
create sequence tab_kitchens_seq start with 1 increment by 1 no minvalue no maxvalue cache 1;
create sequence tab_order_items_seq start with 1 increment by 1 no minvalue no maxvalue cache 1;
create sequence tab_orders_seq start with 1 increment by 1 no minvalue no maxvalue cache 1;
create sequence tab_payment_ways_seq start with 1 increment by 1 no minvalue no maxvalue cache 1;
create sequence tab_permissions_seq start with 1 increment by 1 no minvalue no maxvalue cache 1;
create sequence tab_products_seq start with 1 increment by 1 no minvalue no maxvalue cache 1;
create sequence tab_restaurants_seq start with 1 increment by 1 no minvalue no maxvalue cache 1;
create sequence tab_states_seq start with 1 increment by 1 no minvalue no maxvalue cache 1;
create sequence tab_users_seq start with 1 increment by 1 no minvalue no maxvalue cache 1;

create table group_permission (group_id int8 not null, permission_id int8 not null);
create table restaurant_payment_way (restaurant_id int8 not null, paymentway_id int8 not null);
create table tab_cities (id bigserial not null, name varchar(255) not null, state_id int8 not null, primary key (id));
create table tab_groups (id bigserial not null, created_at timestamp not null, name varchar(255) not null, updated_at timestamp, primary key (id));
create table tab_kitchens (id bigserial not null, name varchar(255) not null, primary key (id));
create table tab_order_items (id bigserial not null, amount int8 not null, created_at timestamp not null, observations varchar(255), total_price numeric(19, 2) not null, unit_price numeric(19, 2) not null, updated_at timestamp, order_id int8 not null, product_id int8 not null, primary key (id));
create table tab_orders (id bigserial not null, address_complement varchar(255), address_district varchar(255), address_number varchar(255), address_postalcode varchar(255), address_street varchar(255), confirmed_at timestamp, canceled_at timestamp, created_at timestamp not null, delivered_at timestamp, partial_price numeric(19, 2) not null, shipping_costs numeric(19, 2) not null, status varchar(255) not null, total_price numeric(19, 2) not null, updated_at timestamp, address_city_id int8, paymentway_id int8 not null, restaurant_id int8 not null, client_user_id int8 not null, primary key (id));
create table tab_payment_ways (id bigserial not null, description varchar(255) not null, primary key (id));
create table tab_permissions (id bigserial not null, description varchar(255) not null, name varchar(255) not null, primary key (id));
create table tab_products (id bigserial not null, active boolean not null, created_at timestamp not null, description varchar(255) not null, name varchar(255) not null, price numeric(19, 2) not null, updated_at timestamp, restaurant_id int8 not null, primary key (id));
create table tab_restaurants (id bigserial not null, address_complement varchar(255), address_district varchar(255), address_number varchar(255), address_postalcode varchar(255), address_street varchar(255), created_at timestamp not null, name varchar(255) not null, shipping_costs numeric(19, 2) not null, updated_at timestamp, address_city_id int8, kitchen_id int8 not null, primary key (id));
create table tab_states (id bigserial not null, name varchar(255) not null, primary key (id));
create table tab_users (id bigserial not null, created_at timestamp not null, email varchar(255) not null, name varchar(255) not null, password varchar(255) not null, updated_at timestamp, primary key (id));
create table user_group (user_id int8 not null, group_id int8 not null);

alter table only tab_cities alter column id set default nextval('tab_cities_seq'::regclass);
alter table only tab_groups alter column id set default nextval('tab_groups_seq'::regclass);
alter table only tab_kitchens alter column id set default nextval('tab_kitchens_seq'::regclass);
alter table only tab_order_items alter column id set default nextval('tab_order_items_seq'::regclass);
alter table only tab_orders alter column id set default nextval('tab_orders_seq'::regclass);
alter table only tab_payment_ways alter column id set default nextval('tab_payment_ways_seq'::regclass);
alter table only tab_permissions alter column id set default nextval('tab_permissions_seq'::regclass);
alter table only tab_products alter column id set default nextval('tab_products_seq'::regclass);
alter table only tab_restaurants alter column id set default nextval('tab_restaurants_seq'::regclass);
alter table only tab_states alter column id set default nextval('tab_states_seq'::regclass);
alter table only tab_users alter column id set default nextval('tab_users_seq'::regclass);

alter table if exists group_permission add constraint fk_permission_group foreign key (permission_id) references tab_permissions;
alter table if exists group_permission add constraint fk_group_permission foreign key (group_id) references tab_groups;
alter table if exists restaurant_payment_way add constraint fk_payment_restaurant foreign key (paymentway_id) references tab_payment_ways;
alter table if exists restaurant_payment_way add constraint fk_restaurant_payment foreign key (restaurant_id) references tab_restaurants;
alter table if exists tab_cities add constraint fk_state_city foreign key (state_id) references tab_states;
alter table if exists tab_order_items add constraint fk_order_item foreign key (order_id) references tab_orders;
alter table if exists tab_order_items add constraint fk_order_product foreign key (product_id) references tab_products;
alter table if exists tab_orders add constraint fk_order_address foreign key (address_city_id) references tab_cities;
alter table if exists tab_orders add constraint fk_order_payment foreign key (paymentway_id) references tab_payment_ways;
alter table if exists tab_orders add constraint fk_order_restaurant foreign key (restaurant_id) references tab_restaurants;
alter table if exists tab_orders add constraint fk_order_user foreign key (client_user_id) references tab_users;
alter table if exists tab_products add constraint fk_product_restaurant foreign key (restaurant_id) references tab_restaurants;
alter table if exists tab_restaurants add constraint fk_restaurant_city foreign key (address_city_id) references tab_cities;
alter table if exists tab_restaurants add constraint fk_restaurant_kitchen foreign key (kitchen_id) references tab_kitchens;
alter table if exists user_group add constraint fk_group_user foreign key (group_id) references tab_groups;
alter table if exists user_group add constraint fk_user_group foreign key (user_id) references tab_users;

